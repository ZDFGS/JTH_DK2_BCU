{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fnil MS Sans Serif;}{\f1\fnil\fcharset2 Symbol;}{\f2\fswiss\fprq2 System;}{\f3\fnil Times New Roman;}{\f4\fswiss\fprq2 Arial;}}
{\colortbl\red0\green0\blue0;\red0\green0\blue128;\red255\green0\blue0;}
\deflang1031\pard\plain\f4\fs28\cf0 DAvE's Project Documentation
\par \plain\f4\fs22\cf0
\par \plain\f4\fs22\cf0 Project: \tab\tab\b CF_EBCU.dav
\par 
\par \plain\f4\fs22\cf0 Controller: \tab\tab\b XE167FM-72F80
\par \plain\f4\fs22\cf0 Compiler: \tab\tab\b Keil
\par \plain\f4\fs22\cf0 Memory Model: \tab\b SMALL
\par 
\par \plain\f4\fs22\cf0 Date: \tab\tab\tab\b 2021/7/20 15:44:57
\par 
\par 
\par \plain\f4\fs22\cf2\b Please read this document carefully and note
\par \plain\f4\fs22\cf2\b the red-colored hints.
\par 
\par \plain\f4\fs22\cf2\b If you miss a file in the generated files list
\par \plain\f4\fs22\cf2\b maybe you have forgotten to select the
\par \plain\f4\fs22\cf2\b initialisation function of the related module.
\par 
\par \plain\f4\fs22\cf0 Generated Files:
\plain\f4\fs20\cf0\b
\par \tab\tab\tab MAIN.H
\par \tab\tab\tab MAIN.C
\par \tab\tab\tab SCS.H
\par \tab\tab\tab SCS.C
\par \tab\tab\tab XE16XXREGS.H
\par \tab\tab\tab IO.H
\par \tab\tab\tab IO.C
\par \tab\tab\tab U2C0.H
\par \tab\tab\tab U2C0.C
\par \tab\tab\tab USIC2.H
\par \tab\tab\tab USIC2.C
\par \tab\tab\tab GPT1.H
\par \tab\tab\tab GPT1.C
\par \tab\tab\tab GPT2.H
\par \tab\tab\tab GPT2.C
\par \tab\tab\tab CC2.H
\par \tab\tab\tab CC2.C
\par \tab\tab\tab CAN.H
\par \tab\tab\tab CAN.C
\par \tab\tab\tab WDT.H
\par \tab\tab\tab WDT.C
\par 
\par 
\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function initializes the microcontroller.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vUnlockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to write one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void MAIN_vLockProtecReg(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function makes it possible to lock one protected

\par \tab \tab register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void main(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the main function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of the System Clock:\par 
\tab - VCO clock used, input clock is connected\par 
\tab - input frequency is 8.00 MHz\par 
\tab - configured system frequency is 80.00 MHz\par 
\tab - system clock is 80.00MHz\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Project Settings
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_EnableOscHiPrecCrystal(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function configures the high precision

\par \tab \tab oscillator for crystal mode.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_RestartVcoLockDetect(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function restarts the VCO lock detection.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_DisconnectVcoInput(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function disconnects VCO from its clock

\par \tab \tab input.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_ConnectVcoInput(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function connects VCO from its clock

\par \tab \tab input.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_SelectVcoBand(unsigned int VcoBand)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function sets the required VCO band.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab VcoBand: 0 or 1

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_StartTimer(unsigned int Cycles)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function starts timer T13 for counting

\par \tab \tab a certain number of clocks.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that the timer is already initialized by

\par \tab \tab SCS_InitTimer.

\par \tab \tab - Cycles < 3 are set to 3 for hardware reasons.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab Cycles: Number of T13 clocks to count, 0...65535

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab inline void SCS_DelayByTimer(unsigned int Cycles)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function starts timer T13 and waits until

\par \tab \tab the specified number of clocks is counted.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that the timer is already initialized by

\par \tab \tab SCS_InitTimer.

\par \tab \tab - Cycles < 3 are set to 3 for hardware reasons.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab Cycles: Number of T13 clocks to count, 0...65535

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_RampUpPllInNormalMode (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This private function performs a ramp-up of the PLL in

\par \tab \tab Normal Operation Mode.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_GoFromBaseToNormalMode (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This use case function performs a transition from Base Mode

\par \tab \tab to Normal Operation Mode.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register

\par \tab \tab protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_InitTimer (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function configures CCU6 timer T13 as one-shot timer with

\par \tab \tab a resolution of 16 CCU6 clocks = 16 system clocks.

\par \tab \tab Notes:

\par \tab \tab - The function will enable CCU6 and will overwrite previous

\par \tab \tab settings for T13.

\par \tab \tab - The function will save the previous CCU6 register contents;

\par \tab \tab they may be restored via SCS_RestoreTimer.

\par \tab \tab - The user must call this function before any other SCS driver

\par \tab \tab function. (except SCS_SelectBandgapHiPrec if needed).

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void SCS_RestoreTimer (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function restores the old CCU6 register

\par \tab \tab values.

\par \tab \tab Notes:

\par \tab \tab - It is assumed that the CCU6 registers have been saved by

\par \tab \tab execution of SCS_InitTimer.

\par \tab \tab - The function will stop and clear T13.

\par \tab \tab - The user may call this function after the last SCS driver

\par \tab \tab function.

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_CheckFreqOscHiPrec (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function checks the high precision

\par \tab \tab oscillator for valid output frequency.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_ApplyNewPDiv (unsigned int PDiv)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function applies a new P divider value to

\par \tab \tab the PLL frequency.

\par \tab \tab Notes:

\par \tab \tab - If the divider is already set to the specified value, the

\par \tab \tab function will return immediately without error.

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PDiv: P divider value

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_ApplyNewNDiv (unsigned int NDiv)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function applies a new N divider value to

\par \tab \tab the PLL frequency.

\par \tab \tab Notes:

\par \tab \tab - If the divider is already set to the specified value, the

\par \tab \tab function will return immediately without error.

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab NDiv: N divider value

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_ApplyNewK1Div (unsigned int K1Div)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function applies a new K1 divider value to

\par \tab \tab the PLL frequency.

\par \tab \tab Notes:

\par \tab \tab - If the divider is already set to the specified value, the

\par \tab \tab function will return immediately without error.

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab K1Div: K1 divider value

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_ApplyNewK2Div (unsigned int K2Div)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function applies a new K2 divider value to

\par \tab \tab the PLL frequency.

\par \tab \tab Notes:

\par \tab \tab - If the divider is already set to the specified value, the

\par \tab \tab function will return immediately without error.

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab K2Div: K2 divider value

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_SelectVcoSrcOscHiPrec (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function selects the high precision

\par \tab \tab oscillator as the source for the VCO.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_EnableVcoLockEmerg (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function enables the VCO loss-of-lock

\par \tab \tab emergency handling.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_DisableVcoBypass (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function disables VCO bypass.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab SCS_ErrorType SCS_EnableVcoBypass (void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This expert level function enables VCO bypass.

\par \tab \tab Notes:

\par \tab \tab - The user is responsible for disabling the register protection.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Error code\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Parallel Ports
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_ubReadPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the status of the chosen portpin.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Status of the chosen portpin\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be read

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vSetPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the chosen portpin to '1'.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to '1'

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vResetPin(PinName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro sets the chosen portpin to '0'.

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to '0'

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vSetPinIn(PinName, Mode)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab The chosen portpin is configured as input.

\par \tab \tab The following definitions for Mode are available:

\par \tab \tab IO_NO_PULL        (no pull device connected)

\par \tab \tab IO_PULL_DOWN      (pull-down device connected)

\par \tab \tab IO_PULL_UP        (pull-up device connected)

\par \tab \tab IO_LOOP_BACK     (Loop back device connected)

\par \tab \tab IO_INVERTED_NO_PULL    (Inverted no pull device connected)

\par \tab \tab IO_INVERTED_PULL_DOWN  (Inverted pull-down device connected)

\par \tab \tab IO_INVERTED_PULL_UP    (Inverted pull-up device connected)

\par \tab \tab IO_INVERTED_LOOP_BACK (Inverted Loop back device connected)

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to input

\par \tab \tab Mode:

\par \tab \tab Input

\par \tab \tab selection(Pull-Down,Pull-Up,Inv-Pull-Down,Inv-Pull-Up)for

\par \tab \tab chosen port pin

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vSetPinOut(PinName, Mode)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab The chosen portpin is configured as output.

\par \tab \tab The following definitions for Mode are available:

\par \tab \tab IO_PUSH_PULL  (push-pull mode)

\par \tab \tab IO_OPEN_DRAIN (open drain mode)

\par \tab \tab Note:

\par \tab \tab See the 'Defines for the parameter PinName' section in this

\par \tab \tab header file for the available definitions for the parameter

\par \tab \tab PinName.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PinName:

\par \tab \tab Pin to be set to output

\par \tab \tab Mode:

\par \tab \tab Output Characteristic(Push-Pull,Open-Drain)for chosen port

\par \tab \tab Pin

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_uwReadPort(PortName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the value of the selected port. If a

\par \tab \tab port has less than 16 pins, the unused bits are set to 0 in

\par \tab \tab the return value

\par \tab \tab The following definitions for PortName are available:

\par \tab \tab P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P15,

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Value of the port\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PortName:

\par \tab \tab Port to be read

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab IO_vWritePort(PortName, uwData)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab The forwarded data is written to the selected port. If a

\par \tab \tab port has less than 16 pins, the bits not used are ignored

\par \tab \tab in the parameter value.

\par \tab \tab The following definitions for PortName are available:

\par \tab \tab P0, P1, P2, P3, P4, P5, P6, P7, P8, P9, P10, P11, P15,

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab PortName:

\par \tab \tab Port to be altered

\par \tab \tab uwData:

\par \tab \tab Value to be written to the chosen port

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void IO_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the IO function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Port P0:\par 
\tab P0.0 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P0.1 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P0.2 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P0.0 - P0.3 output driver characteristic: strong driver\par 
\tab P0.4 - P0.7 output driver characteristic: strong driver\par 
\par 
\tab P0.0 - P0.3 output edge characteristic: sharp edge mode\par 
\tab P0.4 - P0.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P1:\par 
\tab P1.4 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P1.7 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P1.0 - P1.3 output driver characteristic: strong driver\par 
\tab P1.4 - P1.7 output driver characteristic: strong driver\par 
\par 
\tab P1.0 - P1.3 output edge characteristic: sharp edge mode\par 
\tab P1.4 - P1.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P2:\par 
\tab P2.0 is used as alternate input for the CAN0 Receive input(RXDC0C)\par 
\tab P2.1 is used as alternate output for the CAN0 Transmit output(TXDC0C)\par 
\tab - push/pull output is selected\par 
\tab P2.3 is used as alternate output for the CAPCOM2 output(CC2_16)\par 
\tab - push/pull output is selected\par 
\tab P2.4 is used as alternate output for the CAPCOM2 output(CC2_17)\par 
\tab - push/pull output is selected\par 
\tab P2.5 is used as alternate output for the CAPCOM2 output(CC2_18)\par 
\tab - push/pull output is selected\par 
\tab P2.6 is used as alternate output for the CAPCOM2 output(CC2_19)\par 
\tab - push/pull output is selected\par 
\par 
\tab P2.0 - P2.3 output driver characteristic: strong driver\par 
\tab P2.4 - P2.7 output driver characteristic: strong driver\par 
\tab P2.8 - P2.13 output driver characteristic: strong driver\par 
\par 
\tab P2.0 - P2.3 output edge characteristic: sharp edge mode\par 
\tab P2.4 - P2.7 output edge characteristic: sharp edge mode\par 
\tab P2.8 - P2.13 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P3:\par 
\tab P3.0 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P3.1 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P3.2 is used as alternate output for the USIC2 Channel0 Shift Clock\par 
\tab output(SCLKOUT)\par 
\tab - push/pull output is selected\par 
\par 
\tab P3.0 - P3.3 output driver characteristic: strong driver\par 
\tab P3.4 - P3.7 output driver characteristic: strong driver\par 
\par 
\tab P3.0 - P3.3 output edge characteristic: sharp edge mode\par 
\tab P3.4 - P3.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P4:\par 
\tab P4.0 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\tab P4.2 is used as alternate output for the CAN2 Transmit output(TXDC2B)\par 
\tab - push/pull output is selected\par 
\tab P4.3 is used as alternate input for the CAN2 Receive inputA(RXDC2A)\par 
\tab P4.5 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P4.6 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P4.7 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P4.0 - P4.3 output driver characteristic: strong driver\par 
\tab P4.4 - P4.7 output driver characteristic: strong driver\par 
\par 
\tab P4.0 - P4.3 output edge characteristic: sharp edge mode\par 
\tab P4.4 - P4.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P5:\par 
\tab P5.5 is used as general input\par 
\tab P5.6 is used as general input\par 
\tab P5.7 is used as general input\par 
\tab P5.8 is used as general input\par 
\par 
\tab Configuration of Port P6:\par 
\tab P6.3 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P6.0 - P6.3 output driver characteristic: strong driver\par 
\par 
\tab P6.0 - P6.3 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P7:\par 
\tab P7.3 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\tab P7.4 is used as general input\par 
\tab - pull device is tristate\par 
\par 
\tab P7.0 - P7.3 output driver characteristic: strong driver\par 
\tab P7.4 - P7.4 output driver characteristic: strong driver\par 
\par 
\tab P7.0 - P7.3 output edge characteristic: sharp edge mode\par 
\tab P7.4 - P7.4 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P8:\par 
\tab P8.0 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P8.1 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P8.2 is used as general input\par 
\tab - pull device is tristate\par 
\tab P8.3 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\par 
\tab P8.0 - P8.3 output driver characteristic: strong driver\par 
\tab P8.4 - P8.6 output driver characteristic: strong driver\par 
\par 
\tab P8.0 - P8.3 output edge characteristic: sharp edge mode\par 
\tab P8.4 - P8.6 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P9:\par 
\tab P9.2 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P9.4 is used as alternate output for the USIC2 Channel0 Shift Data\par 
\tab Output(DOUT)\par 
\tab - push/pull output is selected\par 
\tab P9.5 is used as alternate input for the USIC2 Channel0 Shift Data\par 
\tab input(DX0E)\par 
\par 
\tab P9.0 - P9.3 output driver characteristic: strong driver\par 
\tab P9.4 - P9.7 output driver characteristic: strong driver\par 
\par 
\tab P9.0 - P9.3 output edge characteristic: sharp edge mode\par 
\tab P9.4 - P9.7 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P10:\par 
\tab P10.11 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is high level\par 
\tab P10.13 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\tab P10.14 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\par 
\tab P10.0 - P10.3 output driver characteristic: strong driver\par 
\tab P10.4 - P10.7 output driver characteristic: strong driver\par 
\tab P10.8 - P10.11 output driver characteristic: strong driver\par 
\tab P10.12 - P10.15 output driver characteristic: strong driver\par 
\par 
\tab P10.0 - P10.3 output edge characteristic: sharp edge mode\par 
\tab P10.4 - P10.7 output edge characteristic: sharp edge mode\par 
\tab P10.8 - P10.11 output edge characteristic: sharp edge mode\par 
\tab P10.12 - P10.15 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P11:\par 
\tab P11.4 is used as general purpose output\par 
\tab - push/pull output is selected\par 
\tab - the pin status is low level\par 
\par 
\tab P11.0 - P11.3 output driver characteristic: strong driver\par 
\tab P11.4 - P11.5 output driver characteristic: strong driver\par 
\par 
\tab P11.0 - P11.3 output edge characteristic: sharp edge mode\par 
\tab P11.4 - P11.5 output edge characteristic: sharp edge mode\par 
\par 
\tab Configuration of Port P15:\par 
\tab - no pin of port P15 is used\par 
\tab - Port15 Data register P15(Read only)\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Universal Serial Interface Channel (USIC) U2C0
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab U2C0_SSC_vSetSELO(ubData)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the slave select output   for U2C0. It is called if

\par \tab \tab the Master wants to communicate with Slave 0 or 7.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubData:

\par \tab \tab Slave Select Output Number(0 to 7).  If 0 Then master wants

\par \tab \tab to communicate with slave 0.  If 1 Then master wants to

\par \tab \tab communicate with slave 1.  And so on  up to slave 7

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab U2C0_SSC_ubTxBufFree()\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro can be used for checking the status of U2C0

\par \tab \tab transmit buffer register. The transmit buffer may only be

\par \tab \tab written to if it is empty, this implies that the previous

\par \tab \tab content of the transmit buffer have been loaded into the

\par \tab \tab transmit shift register.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab U2C0_SSC_ubRxDataReady()\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro can be used for calling the status of U2C0

\par \tab \tab alternative interrupt flag or receiver interrupt flag. This

\par \tab \tab is to recognize that the U2C0 received a byte. If a byte

\par \tab \tab has been received, the function U2C0_SSC_uwGetData must be

\par \tab \tab called.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void U2C0_SSC_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the U2C0 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void U2C0_SSC_vSendData(uword uwData)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function clears the transmit buffer Indication flag

\par \tab \tab first  & then writes the send data initialization word into

\par \tab \tab the transmit buffer register.

\par \tab \tab Note:

\par \tab \tab In a multiprocessor system the master with this function

\par \tab \tab has the possibility to send data to the selected slave.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab uwData:

\par \tab \tab Data to be send

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab uword U2C0_SSC_uwGetData(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function reads out the content of the receive buffer

\par \tab \tab register which contains the received data.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Data that has been received\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab ubyte U2C0_SSC_ubTxDataReady(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function can be used for checking up the status of the

\par \tab \tab transmit shift indication flag U2C0_PSR_TSIF. This function

\par \tab \tab shows when the sending of data has terminated. By

\par \tab \tab continuously polling this flag after the function

\par \tab \tab U2C0_SSC_vSendData has been called, it is possible to

\par \tab \tab establish when U2C0 has terminated its task.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b 0 if transmitter is busy, else 1\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void U2C0_SSC_vi0IC(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the Service

\par \tab \tab Request Node U2C0_0IC.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of the U2C0 Fractional Divider:\par 
\tab - The Fractional divider is selected\par 
\tab - The step value STEP = 640\par 
\par 
\tab Configuration of the U2C0 Baudrate Generator:\par 
\tab - The selected BaudRate is 100.000 kbaud\par 
\tab - The PreDivider for CTQ, PCTQ = 0\par 
\tab - The Denominator for CTQ, DCTQ = 0\par 
\tab - The Divider factor PDIV = 249\par 
\par 
\tab - Shift Clock output configuration (SCLKCFG) = 2, Clock phase =1\par 
\par 
\tab Configuration of the U2C0 Input Control Register:\par 
\tab - The data input DX0E is selected\par 
\par 
\tab Configuration of the U2C0 Interrupt Node Pointer Register:\par 
\tab - TSINP pointer points to Interrupt node U2C0_0IC\par 
\par 
\tab Configuration of the U2C0 Shift Control:\par 
\tab - Transmit/Receive MSB first is selected\par 
\par 
\tab Configuration of the U2C0 Transmit Control/Status Register:\par 
\par 
\tab Configuration of the U2C0 Protocol Control Register:\par 
\par 
\tab Configuration of the U2C0 Protocol Status Register:\par 
\tab - TBIF is set to simplify polling\par 
\par 
\tab Configuration of the used U2C0 Interrupts:\par 
\tab U2C00IC service request node configuration:\par 
\tab - U2C00IC interrupt priority level (ILVL) = 5\par 
\tab - U2C00IC interrupt group level (GLVL) = 0\par 
\tab - U2C00IC group priority extension (GPX) = 0\par 
\par 
\tab Configuration of the used U2C0 Port Pins:\par 
\par 
\tab - P9.4 is used for USIC2 Channel0 Shift Data Output(DOUT)\par 
\tab - P3.2 is used for USIC2 Channel0 Shift Clock output(SCLKOUT)\par 
\par 
\tab Configuration of U2C0 FIFO:\par 
\tab Configuration of U2C0 Transmitter Buffer Conrol Register:\par 
\tab - Transmit FIFO buffer is disabled\par 
\tab Configuration of U2C0 Receiver Buffer Conrol Register:\par 
\tab - Receive FIFO buffer is disabled\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul USIC2
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void USIC2_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function initializes USIC2 Module

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab - USIC2 module clock = 80.00 MHz\par 
\par 
\tab Configuration of the U2C0 Kernel State Configuration:\par 
\par 
\tab Configuration of the U2C0 Channel Control Register (Mode & Interrupts):\par 
\tab - The USIC channel is disabled\par 
\tab - The parity generation is disabled\par 
\par 
\tab Configuration of the U2C0 Channel Control Register (Mode & Interrupts):\par 
\tab - SSC (SPI) Protocol is selected\par 
\tab - The parity generation is disabled\par 
\tab - Transmit shift interrupt is enabled\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul General Purpose Timer Unit (GPT1)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab GPT1_vStartTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro starts the selected GPT1 timer. The timer

\par \tab \tab continues to count from where it had stopped. The following

\par \tab \tab definitions are available for TimerNr:

\par \tab \tab GPT1_TIMER_2

\par \tab \tab GPT1_TIMER_3

\par \tab \tab GPT1_TIMER_4

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab the name of the timer to be started

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab GPT1_vStopTmr(TimerNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro stops the selected GPT1 timer. The contents of

\par \tab \tab the timer register remain unchanged. The remote control of

\par \tab \tab the selected timer is cleared. The following definitions

\par \tab \tab are available for TimerNr:

\par \tab \tab GPT1_TIMER_2

\par \tab \tab GPT1_TIMER_3

\par \tab \tab GPT1_TIMER_4

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab The name of the timer to be stopped

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab GPT1_vLoadTmr(TimerNr, Value)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the selected GPT1 timer with the forwarded

\par \tab \tab value. The timer is not stopped. The access of the CPU to

\par \tab \tab the registers of the timers is of higher priority than a

\par \tab \tab timer increment, a reload or a capture event. The following

\par \tab \tab definitions are available for TimerNr:

\par \tab \tab GPT1_TIMER_2

\par \tab \tab GPT1_TIMER_3

\par \tab \tab GPT1_TIMER_4

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab The name of the timer to be loaded

\par \tab \tab Value:

\par \tab \tab 16-bit value to be loaded

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT1_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the GPT1 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT1_viTmr3(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the GPT1 timer 3.

\par \tab \tab It is called up in the case of over or underflow of the

\par \tab \tab timer 3 register.

\par \tab \tab If the incremental interface mode is selected it is called

\par \tab \tab up if count edge or count direction was detected.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT1_viTmr2(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the GPT1 timer 2.

\par \tab \tab It is called up in the case of over or underflow of the

\par \tab \tab timer 2 register.

\par \tab \tab If the incremental interface mode is selected and the

\par \tab \tab interrupt for this mode is not disabled it is called up if

\par \tab \tab count edge or count direction was detected.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Timer Block Prescaler 1:\par 
\par 
\tab Configuration of Timer Block Prescaler 1:\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Core Timer 3:\par 
\tab - timer 3 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 128\par 
\tab - up/down control bit is reset\par 
\tab - alternate output function T3OUT (P7.0) is disabled\par 
\tab - timer 3 output toggle latch (T3OTL) is set to 0\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Auxiliary Timer 2:\par 
\tab - timer 2 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 8\par 
\tab - up/down control bit is reset\par 
\tab - timer 2 run bit is reset\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the GPT1 Auxiliary Timer 4:\par 
\tab - timer 4 works in timer mode\par 
\tab - external up/down control is disabled\par 
\tab - prescaler factor is 1024\par 
\tab - up/down control bit is reset\par 
\tab - timer 4 run bit is reset\par 
\par 
\tab - prescaler for timer block 1 is 8\par 
\par 
\tab Configuration of the used GPT1 Port Pins:\par 
\par 
\tab Configuration of the used GPT1 Interrupts:\par 
\tab timer 2 service request node configuration:\par 
\tab - timer 2 interrupt priority level (ILVL) = 6\par 
\tab - timer 2 interrupt group level (GLVL) = 0\par 
\tab - timer 2 group priority extension (GPX) = 0\par 
\par 
\tab timer 3 service request node configuration:\par 
\tab - timer 3 interrupt priority level (ILVL) = 8\par 
\tab - timer 3 interrupt group level (GLVL) = 0\par 
\tab - timer 3 group priority extension (GPX) = 0\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul General Purpose Timer Unit (GPT2)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab GPT2_vLoadTmr(TimerNr, Value)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro loads the selected GPT2 timer with the forwarded

\par \tab \tab value. The timer is not stopped. The access of the CPU to

\par \tab \tab the registers of the timers is of higher priority than a

\par \tab \tab timer increment, a reload or a capture event. The following

\par \tab \tab definitions are available for TimerNr:

\par \tab \tab GPT2_TIMER_5

\par \tab \tab GPT2_TIMER_6

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab TimerNr:

\par \tab \tab The name of the timer to be loaded

\par \tab \tab Value:

\par \tab \tab 16-bit value to be loaded

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void GPT2_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the GPT2 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Timer Block Prescaler 1:\par 
\par 
\tab Configuration of Timer Block Prescaler 2:\par 
\tab - prescaler for timer block 2 is 4\par 
\par 
\tab Configuration of the GPT2 Core Timer 5:\par 
\tab - timer 5 works in counter mode\par 
\tab - timer 5 is disabled\par 
\tab - up/down control bit is reset\par 
\tab - external up/down control is disabled\par 
\tab - timer 5 run bit is reset\par 
\tab - timer 5 remote control is disabled\par 
\par 
\tab Configuration of the GPT2 Core Timer 6:\par 
\tab - timer 6 works in timer mode\par 
\tab - prescaler factor is 4\par 
\tab - up/down control bit is reset\par 
\tab - external up/down control is disabled\par 
\tab - alternate output function T6OUT (P6.2) is disabled\par 
\tab - alternate output function T6OUT (P7.0) is disabled\par 
\tab - timer 6 output toggle latch (T6OTL) is set to 0\par 
\tab - timer 6 run bit is reset\par 
\tab - timer 6 is not cleared on a capture\par 
\par 
\tab Configuration of the GPT2 CAPREL:\par 
\tab - capture T5 into CAPREL is disabled\par 
\tab - capture trigger from pin CAPIN\par 
\tab - capure is disabled\par 
\tab - timer 5 is not cleared on a capture\par 
\tab - timer 5 is just captured without any correction\par 
\par 
\tab Configuration of the used GPT2 Port Pins:\par 
\par 
\tab Configuration of the used GPT2 Interrupts:\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Capture / Compare Unit 2 (CAPCOM2)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CC2_uwGetCCxReg(RegName)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This macro returns the content of the selected CAPCOM2

\par \tab \tab register.

\par \tab \tab The following definitions are available for RegName (only

\par \tab \tab for enabled CAPCOM2 channels):

\par \tab \tab CC2_CC_16 .. CC2_CC_31

\par \tab \tab (see @Defines in header file)

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b Current 16-bit value of the CAPCOM2 register\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab RegName:

\par \tab \tab Name of the CAPCOM2 channel to be readed

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CC2_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the CAPCOM2 function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CC2_viTmr7(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the interrupt service routine for the CAPCOM2 timer

\par \tab \tab 7. It is called when overflow of the timer 7 register

\par \tab \tab occurs.

\par \tab \tab Please note that you have to add application specific code

\par \tab \tab to this function.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of  Kernel state configuration Control:\par 
\tab - the Peripheral is supplied with clock signal for CAPCOM2 unit\par 
\tab - the CC2 module clock = 80.00 MHz\par 
\par 
\tab Configuration of CAPCOM2 Control:\par 
\tab - the contents of the CC2_OUT register is visble at output port\par 
\tab - the contents of the port register is changed by the CAPCOM2 unit\par 
\par 
\tab Configuration of CAPCOM2 Timer 7:\par 
\tab - timer 7 works in timer mode\par 
\tab - prescaler factor is 64\par 
\tab - timer 7 run bit is set\par 
\par 
\tab Configuration of CAPCOM2 Timer 8:\par 
\tab - timer 8 works in timer mode\par 
\tab - prescaler factor is 8\par 
\tab - timer 8 run bit is reset\par 
\par 
\tab Configuration of the used CAPCOM2 Timer Port Pins:\par 
\par 
\tab Configuration of the used CAPCOM2 Timer Interrupts:\par 
\tab Tmr7 service request node configuration:\par 
\tab - Tmr7 interrupt priority level (ILVL) = 7\par 
\tab - Tmr7 interrupt group level (GLVL) = 0\par 
\tab - Tmr7 group priority extension (GPX) = 0\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 16:\par 
\tab - compare mode 3:  set bit CC0IO and pin CC16IO (P2.3) on each match\par 
\tab - CC16 allocated to CAPCOM2 timer 7\par 
\tab - single event mode is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 17:\par 
\tab - compare mode 3:  set bit CC1IO and pin CC17IO (P2.4) on each match\par 
\tab - CC17 allocated to CAPCOM2 timer 7\par 
\tab - single event mode is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 18:\par 
\tab - compare mode 3:  set bit CC2IO and pin CC18IO (P2.5) on each match\par 
\tab - CC18 allocated to CAPCOM2 timer 7\par 
\tab - single event mode is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 19:\par 
\tab - compare mode 3:  set bit CC3IO and pin CC19IO (P2.6) on each match\par 
\tab - CC19 allocated to CAPCOM2 timer 7\par 
\tab - single event mode is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 20:\par 
\tab - channel 20 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 21:\par 
\tab - channel 21 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 22:\par 
\tab - channel 22 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 23:\par 
\tab - channel 23 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 24:\par 
\tab - channel 24 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 25:\par 
\tab - channel 25 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 26:\par 
\tab - channel 26 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 27:\par 
\tab - channel 27 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 28:\par 
\tab - channel 28 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 29:\par 
\tab - channel 29 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 30:\par 
\tab - channel 30 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel 31:\par 
\tab - channel 31 is disabled\par 
\par 
\tab Configuration of the used CAPCOM2 Channel Port Pins:\par 
\tab - P2.3 is used for CAPCOM2 output(CC2_16)\par 
\tab - P2.4 is used for CAPCOM2 output(CC2_17)\par 
\tab - P2.5 is used for CAPCOM2 output(CC2_18)\par 
\tab - P2.6 is used for CAPCOM2 output(CC2_19)\par 
\par 
\tab Configuration of the used CAPCOM2 Channels Interrupts:\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul MultiCAN Module (CAN)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CAN_ubNewData(ObjNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function checks whether the selected RECEIVE OBJECT

\par \tab \tab has received a new message. If so the function returns the

\par \tab \tab value '1'.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b 1 the message object has received a new message, else 0\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ObjNr:

\par \tab \tab Number of the message object (0-127)

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the CAN function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vGetMsgObj(ubyte ubObjNr, stCAN_SWObj *pstObj)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function fills the forwarded SW message object with

\par \tab \tab the content of the chosen HW message object.

\par \tab \tab For Receive Message object use function CAN_vReleaseObj, to

\par \tab \tab release the message object.

\par \tab \tab The structure of the SW message object is defined in the

\par \tab \tab header file CAN.H (see stCAN_SWObj).

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object to be read (0-127)

\par \tab \tab *pstObj:

\par \tab \tab Pointer on a message object to be filled by this function

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vTransmit(ubyte ubObjNr)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function triggers the CAN controller to send the

\par \tab \tab selected message.

\par \tab \tab If the selected message object is a TRANSMIT OBJECT then

\par \tab \tab this function triggers the sending of a data frame. If

\par \tab \tab however the selected message object is a RECEIVE OBJECT

\par \tab \tab this function triggers the sending of a remote frame.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object (0-127)

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vConfigMsgObj(ubyte ubObjNr, stCAN_SWObj *pstObj)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function sets up the message objects. This includes

\par \tab \tab the 8 data bytes, the identifier (11- or 29-bit), the

\par \tab \tab acceptance mask (11- or 29-bit), the data number (0-8

\par \tab \tab bytes), the DIR-bit (transmit or receive object), the

\par \tab \tab IDE-bit (standard or extended  identifier), the MIDE-bit

\par \tab \tab (accepts reception of both frames or matching IDE-bit

\par \tab \tab frame) and  the frame counter value.

\par \tab \tab The message is not sent; for this the function

\par \tab \tab CAN_vTransmit must be called.

\par \tab \tab The structure of the SW message object is defined in the

\par \tab \tab header file CAN.H (see stCAN_SWObj).

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object to be configured (0-127)

\par \tab \tab *pstObj:

\par \tab \tab Pointer on a message object

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void CAN_vLoadData(ubyte ubObjNr, ubyte *ubpubData)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab If a hardware TRANSMIT OBJECT has to be loaded with data

\par \tab \tab but not with a new identifier, this function may be used

\par \tab \tab instead of the function CAN_vConfigMsgObj. The message

\par \tab \tab object should be accessed by calling the function

\par \tab \tab CAN_ubRequestMsgObj before calling this function. This

\par \tab \tab prevents the CAN controller from working with invalid data.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab ubObjNr:

\par \tab \tab Number of the message object to be configured (0-127)

\par \tab \tab *ubpubData:

\par \tab \tab Pointer on a data buffer

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CAN_viSRN0()\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab 

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b \plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par
\par \plain\f4\fs20\cf0 \tab Macro:
\par \plain\f4\fs20\cf0\b \tab \tab CAN_viSRN1()\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab 

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b \plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab Configuration of Kernel State Configuration Register:\par 
\tab - Enable the CAN module(MODEN)\par 
\tab - Enable Bit Protection for MODEN\par 
\par 
\tab Configuration of the Module Clock:\par 
\tab - the CAN module clock = 40.00 MHz\par 
\tab - Normal divider mode selected\par 
\par 
\tab Panel Control\par 
\tab - wait until Panel has finished the initialisation\par 
\par 
\tab Configuration of CAN Node 0:\par 
\par 
\tab General Configuration of the Node 0:\par 
\tab - set INIT and CCE\par 
\par 
\tab - load NODE 0 interrupt pointer register\par 
\par 
\tab Configuration of the used CAN Port Pins:\par 
\tab - Loop-back mode is disabled\par 
\tab - P2.0 is used for CAN0 Receive input(RXDC0C)\par 
\tab - P2.1 is used for CAN0 Transmit output(TXDC0C)\par 
\par 
\tab Configuration of the Node 0 Baud Rate:\par 
\tab - required baud rate = 250.000 kbaud\par 
\tab - real baud rate     = 250.000 kbaud\par 
\tab - sample point       = 60.00 %\par 
\tab - there are 5 time quanta before sample point\par 
\tab - there are 4 time quanta after sample point\par 
\tab - the (re)synchronization jump width is 2 time quanta\par 
\par 
\tab Configuration of the Node 0 Error Counter:\par 
\tab - the error warning threshold value (warning level) is 96\par 
\par 
\tab Configuration of the Frame Counter:\par 
\tab - Frame Counter Mode: the counter is incremented upon the reception\par 
\tab and transmission of frames\par 
\tab - frame counter: 0x0000\par 
\par 
\tab Configuration of CAN Node 1:\par 
\par 
\tab General Configuration of the Node 1:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 2:\par 
\par 
\tab General Configuration of the Node 2:\par 
\tab - set INIT and CCE\par 
\par 
\tab - load NODE 2 interrupt pointer register\par 
\par 
\tab Configuration of the used CAN Port Pins:\par 
\tab - Loop-back mode is disabled\par 
\tab - P4.3 is used for CAN2 Receive inputA(RXDC2A)\par 
\tab - P4.2 is used for CAN2 Transmit output(TXDC2B)\par 
\par 
\tab Configuration of the Node 2 Baud Rate:\par 
\tab - required baud rate = 250.000 kbaud\par 
\tab - real baud rate     = 250.000 kbaud\par 
\tab - sample point       = 60.00 %\par 
\tab - there are 5 time quanta before sample point\par 
\tab - there are 4 time quanta after sample point\par 
\tab - the (re)synchronization jump width is 2 time quanta\par 
\par 
\tab Configuration of the Node 2 Error Counter:\par 
\tab - the error warning threshold value (warning level) is 96\par 
\par 
\tab Configuration of the Frame Counter:\par 
\tab - Frame Counter Mode: the counter is incremented upon the reception\par 
\tab and transmission of frames\par 
\tab - frame counter: 0x0000\par 
\par 
\tab Configuration of CAN Node 3:\par 
\par 
\tab General Configuration of the Node 3:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 4:\par 
\par 
\tab General Configuration of the Node 4:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of CAN Node 5:\par 
\par 
\tab General Configuration of the Node 5:\par 
\tab - set INIT and CCE\par 
\par 
\tab Configuration of the CAN Message Object List Structure:\par 
\par 
\tab Allocate MOs for list 1:\par 
\par 
\tab Allocate MOs for list 3:\par 
\par 
\tab Configuration of the CAN Message Objects 0 - 127:\par 
\tab Configuration of Message Object 0:\par 
\par 
\tab General Configuration of the Message Object 0 :\par 
\tab - message object 0 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 0 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x021\par 
\par 
\tab Configuration of Message Object 0 Data:\par 
\par 
\tab Configuration of Message Object 0 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 0 interrupt pointer:\par 
\tab - use message pending register 0 bit position 0\par 
\par 
\tab Configuration of Message Object 0 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 0 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 1:\par 
\par 
\tab General Configuration of the Message Object 1 :\par 
\tab - message object 1 is valid\par 
\tab - message object is used as receive object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 1 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x000\par 
\par 
\tab Configuration of Message Object 1 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x000\par 
\par 
\tab Configuration of Message Object 1 interrupt pointer:\par 
\tab - use message pending register 0 bit position 1\par 
\tab - receive interrupt node pointer: MultiCAN SRN 0\par 
\par 
\tab Configuration of Message Object 1 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 1 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\tab - enable receive interrupt; bit RXPND is set after successful\par 
\tab reception of a frame\par 
\par 
\tab Configuration of Message Object 2:\par 
\par 
\tab General Configuration of the Message Object 2 :\par 
\tab - message object 2 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 2 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x022\par 
\par 
\tab Configuration of Message Object 2 Data:\par 
\par 
\tab Configuration of Message Object 2 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 2 interrupt pointer:\par 
\tab - use message pending register 0 bit position 2\par 
\par 
\tab Configuration of Message Object 2 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 2 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 3:\par 
\par 
\tab General Configuration of the Message Object 3 :\par 
\tab - message object 3 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 3 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x023\par 
\par 
\tab Configuration of Message Object 3 Data:\par 
\par 
\tab Configuration of Message Object 3 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 3 interrupt pointer:\par 
\tab - use message pending register 0 bit position 3\par 
\par 
\tab Configuration of Message Object 3 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 3 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 4:\par 
\par 
\tab General Configuration of the Message Object 4 :\par 
\tab - message object 4 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 1 (node 0)\par 
\par 
\tab Configuration of Message Object 4 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x024\par 
\par 
\tab Configuration of Message Object 4 Data:\par 
\par 
\tab Configuration of Message Object 4 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 4 interrupt pointer:\par 
\tab - use message pending register 0 bit position 4\par 
\par 
\tab Configuration of Message Object 4 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 4 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 5:\par 
\tab - message object 5 is not valid\par 
\tab Configuration of Message Object 6:\par 
\tab - message object 6 is not valid\par 
\tab Configuration of Message Object 7:\par 
\tab - message object 7 is not valid\par 
\tab Configuration of Message Object 8:\par 
\par 
\tab General Configuration of the Message Object 8 :\par 
\tab - message object 8 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 3 (node 2)\par 
\par 
\tab Configuration of Message Object 8 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x021\par 
\par 
\tab Configuration of Message Object 8 Data:\par 
\par 
\tab Configuration of Message Object 8 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 8 interrupt pointer:\par 
\tab - use message pending register 0 bit position 8\par 
\par 
\tab Configuration of Message Object 8 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 8 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 9:\par 
\par 
\tab General Configuration of the Message Object 9 :\par 
\tab - message object 9 is valid\par 
\tab - message object is used as receive object\par 
\tab - this message object is assigned to list 3 (node 2)\par 
\par 
\tab Configuration of Message Object 9 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x000\par 
\par 
\tab Configuration of Message Object 9 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x000\par 
\par 
\tab Configuration of Message Object 9 interrupt pointer:\par 
\tab - use message pending register 0 bit position 9\par 
\tab - receive interrupt node pointer: MultiCAN SRN 1\par 
\par 
\tab Configuration of Message Object 9 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 9 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\tab - enable receive interrupt; bit RXPND is set after successful\par 
\tab reception of a frame\par 
\par 
\tab Configuration of Message Object 10:\par 
\par 
\tab General Configuration of the Message Object 10 :\par 
\tab - message object 10 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 3 (node 2)\par 
\par 
\tab Configuration of Message Object 10 Arbitration:\par 
\tab - priority class 1; transmit acceptance filtering is based on the list\par 
\tab order\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x022\par 
\par 
\tab Configuration of Message Object 10 Data:\par 
\par 
\tab Configuration of Message Object 10 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 10 interrupt pointer:\par 
\tab - use message pending register 0 bit position 10\par 
\par 
\tab Configuration of Message Object 10 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 10 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 11:\par 
\par 
\tab General Configuration of the Message Object 11 :\par 
\tab - message object 11 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 3 (node 2)\par 
\par 
\tab Configuration of Message Object 11 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x023\par 
\par 
\tab Configuration of Message Object 11 Data:\par 
\par 
\tab Configuration of Message Object 11 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 11 interrupt pointer:\par 
\tab - use message pending register 0 bit position 11\par 
\par 
\tab Configuration of Message Object 11 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 11 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 12:\par 
\par 
\tab General Configuration of the Message Object 12 :\par 
\tab - message object 12 is valid\par 
\tab - message object is used as transmit object\par 
\tab - this message object is assigned to list 3 (node 2)\par 
\par 
\tab Configuration of Message Object 12 Arbitration:\par 
\tab - priority class 2; transmit acceptance filtering is based on the CAN\par 
\tab identifier\par 
\tab - standard 11-bit identifier\par 
\tab - identifier 11-bit:      0x024\par 
\par 
\tab Configuration of Message Object 12 Data:\par 
\par 
\tab Configuration of Message Object 12 acceptance mask:\par 
\tab - only accept receive frames with matching IDE bit\par 
\tab - acceptance mask 11-bit: 0x7FF\par 
\par 
\tab Configuration of Message Object 12 interrupt pointer:\par 
\tab - use message pending register 0 bit position 12\par 
\par 
\tab Configuration of Message Object 12 FIFO/Gateway pointer:\par 
\par 
\tab Configuration of Message Object 12 Function control:\par 
\tab - this object is a STANDARD MESSAGE OBJECT\par 
\tab - 8 valid data bytes\par 
\par 
\tab Configuration of Message Object 13:\par 
\tab - message object 13 is not valid\par 
\tab Configuration of Message Object 14:\par 
\tab - message object 14 is not valid\par 
\tab Configuration of Message Object 15:\par 
\tab - message object 15 is not valid\par 
\tab Configuration of Message Object 16:\par 
\tab - message object 16 is not valid\par 
\tab Configuration of Message Object 17:\par 
\tab - message object 17 is not valid\par 
\tab Configuration of Message Object 18:\par 
\tab - message object 18 is not valid\par 
\tab Configuration of Message Object 19:\par 
\tab - message object 19 is not valid\par 
\tab Configuration of Message Object 20:\par 
\tab - message object 20 is not valid\par 
\tab Configuration of Message Object 21:\par 
\tab - message object 21 is not valid\par 
\tab Configuration of Message Object 22:\par 
\tab - message object 22 is not valid\par 
\tab Configuration of Message Object 23:\par 
\tab - message object 23 is not valid\par 
\tab Configuration of Message Object 24:\par 
\tab - message object 24 is not valid\par 
\tab Configuration of Message Object 25:\par 
\tab - message object 25 is not valid\par 
\tab Configuration of Message Object 26:\par 
\tab - message object 26 is not valid\par 
\tab Configuration of Message Object 27:\par 
\tab - message object 27 is not valid\par 
\tab Configuration of Message Object 28:\par 
\tab - message object 28 is not valid\par 
\tab Configuration of Message Object 29:\par 
\tab - message object 29 is not valid\par 
\tab Configuration of Message Object 30:\par 
\tab - message object 30 is not valid\par 
\tab Configuration of Message Object 31:\par 
\tab - message object 31 is not valid\par 
\tab Configuration of Message Object 32:\par 
\tab - message object 32 is not valid\par 
\tab Configuration of Message Object 33:\par 
\tab - message object 33 is not valid\par 
\tab Configuration of Message Object 34:\par 
\tab - message object 34 is not valid\par 
\tab Configuration of Message Object 35:\par 
\tab - message object 35 is not valid\par 
\tab Configuration of Message Object 36:\par 
\tab - message object 36 is not valid\par 
\tab Configuration of Message Object 37:\par 
\tab - message object 37 is not valid\par 
\tab Configuration of Message Object 38:\par 
\tab - message object 38 is not valid\par 
\tab Configuration of Message Object 39:\par 
\tab - message object 39 is not valid\par 
\tab Configuration of Message Object 40:\par 
\tab - message object 40 is not valid\par 
\tab Configuration of Message Object 41:\par 
\tab - message object 41 is not valid\par 
\tab Configuration of Message Object 42:\par 
\tab - message object 42 is not valid\par 
\tab Configuration of Message Object 43:\par 
\tab - message object 43 is not valid\par 
\tab Configuration of Message Object 44:\par 
\tab - message object 44 is not valid\par 
\tab Configuration of Message Object 45:\par 
\tab - message object 45 is not valid\par 
\tab Configuration of Message Object 46:\par 
\tab - message object 46 is not valid\par 
\tab Configuration of Message Object 47:\par 
\tab - message object 47 is not valid\par 
\tab Configuration of Message Object 48:\par 
\tab - message object 48 is not valid\par 
\tab Configuration of Message Object 49:\par 
\tab - message object 49 is not valid\par 
\tab Configuration of Message Object 50:\par 
\tab - message object 50 is not valid\par 
\tab Configuration of Message Object 51:\par 
\tab - message object 51 is not valid\par 
\tab Configuration of Message Object 52:\par 
\tab - message object 52 is not valid\par 
\tab Configuration of Message Object 53:\par 
\tab - message object 53 is not valid\par 
\tab Configuration of Message Object 54:\par 
\tab - message object 54 is not valid\par 
\tab Configuration of Message Object 55:\par 
\tab - message object 55 is not valid\par 
\tab Configuration of Message Object 56:\par 
\tab - message object 56 is not valid\par 
\tab Configuration of Message Object 57:\par 
\tab - message object 57 is not valid\par 
\tab Configuration of Message Object 58:\par 
\tab - message object 58 is not valid\par 
\tab Configuration of Message Object 59:\par 
\tab - message object 59 is not valid\par 
\tab Configuration of Message Object 60:\par 
\tab - message object 60 is not valid\par 
\tab Configuration of Message Object 61:\par 
\tab - message object 61 is not valid\par 
\tab Configuration of Message Object 62:\par 
\tab - message object 62 is not valid\par 
\tab Configuration of Message Object 63:\par 
\tab - message object 63 is not valid\par 
\tab Configuration of Message Object 64:\par 
\tab - message object 64 is not valid\par 
\tab Configuration of Message Object 65:\par 
\tab - message object 65 is not valid\par 
\tab Configuration of Message Object 66:\par 
\tab - message object 66 is not valid\par 
\tab Configuration of Message Object 67:\par 
\tab - message object 67 is not valid\par 
\tab Configuration of Message Object 68:\par 
\tab - message object 68 is not valid\par 
\tab Configuration of Message Object 69:\par 
\tab - message object 69 is not valid\par 
\tab Configuration of Message Object 70:\par 
\tab - message object 70 is not valid\par 
\tab Configuration of Message Object 71:\par 
\tab - message object 71 is not valid\par 
\tab Configuration of Message Object 72:\par 
\tab - message object 72 is not valid\par 
\tab Configuration of Message Object 73:\par 
\tab - message object 73 is not valid\par 
\tab Configuration of Message Object 74:\par 
\tab - message object 74 is not valid\par 
\tab Configuration of Message Object 75:\par 
\tab - message object 75 is not valid\par 
\tab Configuration of Message Object 76:\par 
\tab - message object 76 is not valid\par 
\tab Configuration of Message Object 77:\par 
\tab - message object 77 is not valid\par 
\tab Configuration of Message Object 78:\par 
\tab - message object 78 is not valid\par 
\tab Configuration of Message Object 79:\par 
\tab - message object 79 is not valid\par 
\tab Configuration of Message Object 80:\par 
\tab - message object 80 is not valid\par 
\tab Configuration of Message Object 81:\par 
\tab - message object 81 is not valid\par 
\tab Configuration of Message Object 82:\par 
\tab - message object 82 is not valid\par 
\tab Configuration of Message Object 83:\par 
\tab - message object 83 is not valid\par 
\tab Configuration of Message Object 84:\par 
\tab - message object 84 is not valid\par 
\tab Configuration of Message Object 85:\par 
\tab - message object 85 is not valid\par 
\tab Configuration of Message Object 86:\par 
\tab - message object 86 is not valid\par 
\tab Configuration of Message Object 87:\par 
\tab - message object 87 is not valid\par 
\tab Configuration of Message Object 88:\par 
\tab - message object 88 is not valid\par 
\tab Configuration of Message Object 89:\par 
\tab - message object 89 is not valid\par 
\tab Configuration of Message Object 90:\par 
\tab - message object 90 is not valid\par 
\tab Configuration of Message Object 91:\par 
\tab - message object 91 is not valid\par 
\tab Configuration of Message Object 92:\par 
\tab - message object 92 is not valid\par 
\tab Configuration of Message Object 93:\par 
\tab - message object 93 is not valid\par 
\tab Configuration of Message Object 94:\par 
\tab - message object 94 is not valid\par 
\tab Configuration of Message Object 95:\par 
\tab - message object 95 is not valid\par 
\tab Configuration of Message Object 96:\par 
\tab - message object 96 is not valid\par 
\tab Configuration of Message Object 97:\par 
\tab - message object 97 is not valid\par 
\tab Configuration of Message Object 98:\par 
\tab - message object 98 is not valid\par 
\tab Configuration of Message Object 99:\par 
\tab - message object 99 is not valid\par 
\tab Configuration of Message Object 100:\par 
\tab - message object 100 is not valid\par 
\tab Configuration of Message Object 101:\par 
\tab - message object 101 is not valid\par 
\tab Configuration of Message Object 102:\par 
\tab - message object 102 is not valid\par 
\tab Configuration of Message Object 103:\par 
\tab - message object 103 is not valid\par 
\tab Configuration of Message Object 104:\par 
\tab - message object 104 is not valid\par 
\tab Configuration of Message Object 105:\par 
\tab - message object 105 is not valid\par 
\tab Configuration of Message Object 106:\par 
\tab - message object 106 is not valid\par 
\tab Configuration of Message Object 107:\par 
\tab - message object 107 is not valid\par 
\tab Configuration of Message Object 108:\par 
\tab - message object 108 is not valid\par 
\tab Configuration of Message Object 109:\par 
\tab - message object 109 is not valid\par 
\tab Configuration of Message Object 110:\par 
\tab - message object 110 is not valid\par 
\tab Configuration of Message Object 111:\par 
\tab - message object 111 is not valid\par 
\tab Configuration of Message Object 112:\par 
\tab - message object 112 is not valid\par 
\tab Configuration of Message Object 113:\par 
\tab - message object 113 is not valid\par 
\tab Configuration of Message Object 114:\par 
\tab - message object 114 is not valid\par 
\tab Configuration of Message Object 115:\par 
\tab - message object 115 is not valid\par 
\tab Configuration of Message Object 116:\par 
\tab - message object 116 is not valid\par 
\tab Configuration of Message Object 117:\par 
\tab - message object 117 is not valid\par 
\tab Configuration of Message Object 118:\par 
\tab - message object 118 is not valid\par 
\tab Configuration of Message Object 119:\par 
\tab - message object 119 is not valid\par 
\tab Configuration of Message Object 120:\par 
\tab - message object 120 is not valid\par 
\tab Configuration of Message Object 121:\par 
\tab - message object 121 is not valid\par 
\tab Configuration of Message Object 122:\par 
\tab - message object 122 is not valid\par 
\tab Configuration of Message Object 123:\par 
\tab - message object 123 is not valid\par 
\tab Configuration of Message Object 124:\par 
\tab - message object 124 is not valid\par 
\tab Configuration of Message Object 125:\par 
\tab - message object 125 is not valid\par 
\tab Configuration of Message Object 126:\par 
\tab - message object 126 is not valid\par 
\tab Configuration of Message Object 127:\par 
\tab - message object 127 is not valid\par 
\par 
\tab Configuration of Service Request Nodes 0 - 15:\par 
\tab SRN0 service request node configuration:\par 
\tab - SRN0 interrupt priority level (ILVL) = 10\par 
\tab - SRN0 interrupt group level (GLVL) = 0\par 
\tab - SRN0 group priority extension (GPX) = 0\par 
\par 
\tab SRN1 service request node configuration:\par 
\tab - SRN1 interrupt priority level (ILVL) = 10\par 
\tab - SRN1 interrupt group level (GLVL) = 1\par 
\tab - SRN1 group priority extension (GPX) = 0\par 
\par 

\par \plain\f4\fs20\cf0
\par \plain\f4\fs28\cf0\ul Watchdog Timer (WDT)
\par
\par \plain\f4\fs24\cf0 Macros:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void WDT_vServiceWDT(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function service the watchdog timer. If the watchdog

\par \tab \tab timer is used in an application, it has to be regularly

\par \tab \tab serviced to prevent it from overflowing.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void WDT_vEnableWDT(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This function enables the watchdog timer.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par \plain\f4\fs24\cf0 Functions:\f4\fs20\cf0
\par
\par \plain\f4\fs20\cf0 \tab Function:
\par \plain\f4\fs20\cf0\b \tab \tab void WDT_vInit(void)\plain\f4\fs20\cf0
\par \tab Description:
\par \plain\f4\fs20\cf0\i
\tab \tab This is the initialization function of the WDT function

\par \tab \tab library. It is assumed that the SFRs used by this library

\par \tab \tab are in reset state.

\par \plain\f4\fs20\cf0 \tab Returnvalue:
\par \tab \tab \plain\f4\fs20\cf0\b None\plain\f4\fs20\cf0
\par \plain\f4\fs20\cf0 \tab Parameters:
\par \plain\f4\fs20\cf0\b 
\tab \tab None

\par
\par \plain\f4\fs24\cf0 Initialization:
\par \plain\f4\fs20\cf0\b
\par
\tab - DISWDT executable only until End Of Init\par 
\tab - the input frequency is Fin / 16384\par 
\tab - period in normal watchdog mode =  1.678 s\par 
\tab - period in time-out mode =  819.200 usec\par 
\par 

}
